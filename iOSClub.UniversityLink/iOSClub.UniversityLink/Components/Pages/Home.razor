@page "/"
@using global::UniversityLink.DataModels
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<LinkContext> DbFactory

<PageTitle>建大Link - 西建大iOS Club</PageTitle>

@if (Categories.Count == 0 && OtherLinks.Count == 0)
{
    <Empty Image="https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg"
           Style="padding: 20px" Description="@("当前还未添加任何链接")"/>
}
else
{
    <Flex Justify="center" Align="center">
        <GridRow Class="block" Gutter="(20, 24)">
            @foreach (var category in Categories)
            {
                <GridCol Xs="24" Sm="24" Md="24" Lg="12" Xl="12" Xxl="12">
                    <AppleCard>
                        <TitleTemplate>
                            <Flex>
                                <Icon Type="@category.Icon"/>
                                <Title Level="2">@category.Name</Title>
                            </Flex>
                            <Paragraph Type="secondary">@category.Description</Paragraph>
                        </TitleTemplate>
                        <ContextTemplate>
                            <Flex Gap="10">
                                @foreach (var link in category.Links)
                                {
                                    <a href="@link.Url" target="_blank" class="button">
                                        <Flex>
                                            <Icon Type="@link.Icon"/>
                                            <Title Level="2">@link.Name</Title>
                                        </Flex>
                                        <Paragraph Type="secondary">@link.Description</Paragraph>
                                    </a>
                                }
                            </Flex>
                        </ContextTemplate>
                    </AppleCard>
                </GridCol>
            }
        </GridRow>
    </Flex>
}

@code
{
    private List<CategoryModel> Categories { get; set; } = [];
    private List<LinkModel> OtherLinks { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        await using var context = await DbFactory.CreateDbContextAsync();
        Categories = await context.Categories.ToListAsync();
        OtherLinks = await context.Links.Where(x => x.Category == null).ToListAsync();
        await base.OnInitializedAsync();
    }
}

<style>
    .ant-layout {
        background-image: linear-gradient(to bottom right, #ff6b6b, #7171ae, #10bce7);
        overflow: auto;
    }

    .ant-layout-content {
        min-height: 100vh;
    }

    .Layout-Header {
        background: rgba(255, 255, 255, 0.3);
        -webkit-backdrop-filter: blur(20px);
        backdrop-filter: blur(20px);
        box-shadow: inset 0 0 6px rgba(255, 255, 255, 0.3);
        padding-left: 10px;
        padding-right: 10px;
        margin: 10px;
        border-radius: 10px;
    }

    .a-btn {
        border-radius: 10px;
    }

    .block {
        width: 80%;
        margin-top: 45px;
        margin-bottom: 45px;
    }

    html, body {
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
        background-size: auto;
        background-repeat: no-repeat;
        background-position: initial;
    }

    ::-webkit-scrollbar {
        display: none;
    }
</style>