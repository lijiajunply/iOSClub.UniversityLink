@page "/Theme/App"
@using global::UniversityLink.DataModels
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<LinkContext> DbFactory
@inject IJSRuntime JS
@inject ModalService _modalService

<PageTitle>建大Link - 西建大iOS Club</PageTitle>

<Flex Justify="center" Align="center">
    <Flex Class="block" Wrap="wrap">
        @foreach (var t in Categories)
        {
            var links = t.Links;
            if (links.Count > 9)
            {
                links = links[..9];
            }

            if (links.Count == 0) continue;
            <div class="folder" @onclick="() => ShowLoading(t)">
                <div Class="box" style="height: 230px;width: 230px;">
                    <GridRow Gutter="(20, 20)" Style="margin-top: 10px">
                        @foreach (var link in links)
                        {
                            <GridCol Span="8" Style="text-align: center">
                                <IconFont Style="font-size: 50px" Type="@($"icon-{link.Icon}")"/>
                            </GridCol>
                        }
                    </GridRow>
                </div>
                <div class="btn-description" style="text-align: center;font-size: 1em;">@t.Name</div>
            </div>
        }
    </Flex>
</Flex>

<Modal @bind-Visible="isLoading" Footer="null" Header="null"
       Class="folder-modal" BodyStyle="height: 330px;width: 330px">
    <div Class="box">
        <Carousel>
            @for (var i = 0; i <= selectedLink.Length / 9; i++)
            {
                var i1 = i;
                <CarouselSlick >
                    <GridRow Gutter="(20, 20)" Style="width: 300px;height: 300px">
                        @for (var j = i1 * 9; j < (i1 + 1) * 9 && j < selectedLink.Length; j++)
                        {
                            var link = selectedLink[j];

                            <GridCol Span="8" Style="text-align: center">
                                <IconFont Style="font-size: 40px" Type="@($"icon-{link.Icon}")"/>
                                <div class="btn-description" style="text-align: center;">@link.Name</div>
                            </GridCol>
                        }
                    </GridRow>
                </CarouselSlick>
            }
        </Carousel>
    </div>
</Modal>

@code
{
    private List<CategoryModel> Categories { get; set; } = [];
    private bool isWeixin;
    private LinkModel[] selectedLink = [];
    private bool isLoading;

    private void ShowLoading(CategoryModel categoryModel)
    {
        selectedLink = categoryModel.Links.ToArray();
        isLoading = true;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        if (Categories.Count != 0) return;
        await using var context = await DbFactory.CreateDbContextAsync();
        Categories = await context.Categories
            .Include(x => x.Links.OrderBy(y => y.Index))
            .OrderBy(x => x.Index)
            .ToListAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        isWeixin = await JS.InvokeAsync<bool>("isWeiXin");
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task QrCodeModalOpen(LinkModel link)
    {
        await _modalService.CreateConfirmAsync<ConfirmTemplate, LinkModel, LinkModel>
            (new ConfirmOptions() { OkCancel = false }, link);
    }

    private string GetIcon(string url)
        => $"https://{url.Replace("https://", "").Replace("http://", "").Split('/').First()}/favicon.ico";
}

<style>
    .ant-layout {
        background-image: linear-gradient(to bottom right, #ff6b6b, #7171ae, #10bce7);
        overflow: auto;
    }

    .ant-layout-content {
        height: calc(100vh - 84px);
    }

    .Layout-Header {
        background: rgba(255, 255, 255, 0.3);
        -webkit-backdrop-filter: blur(20px);
        backdrop-filter: blur(20px);
        /*box-shadow: inset 0 0 6px rgba(255, 255, 255, 0.3);*/
        padding-left: 10px;
        padding-right: 10px;
    }
    
    .block {
        padding-left: 5%;
        padding-right: 5%;
        height: calc(100vh - 64px);
        overflow: auto;
    }
    
    .box{
        background: rgba(255, 255, 255, 0.3);
        -webkit-backdrop-filter: blur(20px);
        backdrop-filter: blur(20px);
        box-shadow: inset 0 0 6px rgba(255, 255, 255, 0.3);
        padding: 10px;
        border-radius: 20px;
    }
    
    .folder{
        margin: 20px;
        transition: .3s;
    }
    
    .folder:hover{
        cursor: pointer;
        transform: scale(1.02);
    }

    ::-webkit-scrollbar {
        display: none;
    }

    .btn-description {
        font-size: 0.8em;
        color: #f3f5f7;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
    
    .folder-modal .ant-modal-content{
        background: transparent;
        border-color: transparent;
        box-shadow: none;
    }
    .folder-modal{
        background: transparent;
        border-color: transparent;
        max-width: 250px;
    }
</style>